AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  FirstLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.lambda_handler
      CodeUri: src/first_lambda/
      Runtime: python3.12
      Environment:
        Variables:
          SCHEDULE_ROLE_ARN: !GetAtt SchedulerRole.Arn
          SECOND_LAMBDA_ARN: !GetAtt SecondLambdaFunction.Arn
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - scheduler:CreateSchedule
                - scheduler:DeleteSchedule
              Resource: "*"
        - Statement:  # Add this policy for PassRole
            - Effect: Allow
              Action: iam:PassRole
              Resource: !GetAtt SchedulerRole.Arn


  SecondLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.lambda_handler 
      CodeUri: src/second_lambda/
      Runtime: python3.12

  SchedulerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: scheduler.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: EventBridgeSchedulerPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: !GetAtt SecondLambdaFunction.Arn
